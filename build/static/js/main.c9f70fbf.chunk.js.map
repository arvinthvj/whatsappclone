{"version":3,"sources":["firebase.js","StateProvider.js","SidebarChat.js","Sidebar.js","Chat.js","reducer.js","Login.js","App.js","reportWebVitals.js","index.js"],"names":["firebaseApp","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","auth","provider","GoogleAuthProvider","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","SidebarChat","id","name","addNewChat","email","user","useState","seed","setSeed","messages","setMessages","setNewPersonEnterOrNot","lengthOfTheGroup","setLengthOfTheGroup","useEffect","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","findTheNamsLength","reduce","acc","curr","includes","push","length","Math","floor","random","onClick","roomName","prompt","add","className","to","Avatar","src","message","Sidebar","props","useHistory","rooms","setRooms","searchFilter","setSearchFilter","window","filter","e","toLowerCase","unsubscribe","undefined","content","style","justifyContent","cursor","signOut","localStorage","removeItem","location","href","slice","indexOf","photoURL","IconButton","title","trigger","SearchOutlined","onChange","target","type","placeholder","room","Chat","input","setInput","roomId","useParams","setRoomName","moment","Date","timestamp1","fromNow","AttachFile","displayName","format","toDateString","preventDefault","timestamp","toUTCString","actionTypes","state","action","Login","dispatch","alt","Button","signInWithPopup","then","result","setItem","JSON","stringify","catch","error","alert","App","getItem","parse","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c9f70fbf.chunk.js","sourcesContent":["import firebase from \"firebase\";\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\n//GET Below Settings from Firebase > Project Overview > Settings > General > Your apps > Firebase SDK snippet > Config\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDFHrTHY9PTPlhOVzvIksYwK9rr4EN6N-Q\",\n  authDomain: \"whatsapp-clone-1d69b.firebaseapp.com\",\n  projectId: \"whatsapp-clone-1d69b\",\n  storageBucket: \"whatsapp-clone-1d69b.appspot.com\",\n  messagingSenderId: \"1015522554165\",\n  appId: \"1:1015522554165:web:d144541838a8f62348dc7c\"\n};\n\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\n  const db = firebaseApp.firestore(); \n  const auth = firebaseApp.auth();\n  const provider = new firebase.auth.GoogleAuthProvider();\n\n  export {auth,provider};\n  export default db;\n","import React, {createContext,useContext,useReducer} from 'react';\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({ reducer, initialState, children}) => (\r\n    <StateContext.Provider value={useReducer(reducer,initialState)}>\r\n        {children}\r\n    </StateContext.Provider>\r\n);\r\n\r\nexport const useStateValue = () => useContext(StateContext);","import React, {useEffect, useState} from 'react';\r\nimport {Avatar} from \"@material-ui/core\";\r\nimport './SidebarChat.css';\r\nimport db from './firebase';\r\nimport {Link} from 'react-router-dom';\r\nimport { Modal, Button, Space } from 'antd';\r\nimport { useStateValue } from './StateProvider';\r\nimport ModalSeperate from './ModalSeperate';\r\n\r\n\r\nfunction info() {\r\n    Modal.info({\r\n      title: 'This is a notification message',\r\n      content: (\r\n        <div>\r\n            Oh ho ! The group is full\r\n        </div>\r\n      ),\r\n      onOk() {},\r\n    });\r\n  }\r\nfunction SidebarChat({id,name,addNewChat, email}) {\r\n    const [{user},dispatch] = useStateValue();\r\n    const [seed, setSeed] = useState(\"\");\r\n    const [messages, setMessages] = useState(\"\");\r\n    const [newPersonEnterOrNot, setNewPersonEnterOrNot] = useState(true);\r\n    const [lengthOfTheGroup, setLengthOfTheGroup] = useState(0);\r\n   \r\n    useEffect(() => {\r\n        if(id){\r\n            db.collection('rooms').doc(id).collection('messages').orderBy('timestamp','desc').onSnapshot(snapshot => {\r\n                setMessages(snapshot.docs.map((doc) => doc.data()));\r\n                debugger\r\n                let data = snapshot.docs.map((doc) => doc.data());\r\n                let findTheNamsLength = data.reduce((acc,curr)=>{\r\n                    if(!acc.includes(curr.name)){\r\n                        acc.push(curr.name)\r\n                    }\r\n                    return acc\r\n                },[]);\r\n                setLengthOfTheGroup(findTheNamsLength.length);\r\n                if( email && !email.includes(user.email) ){\r\n                    setNewPersonEnterOrNot(false);\r\n                }else{\r\n                    setNewPersonEnterOrNot(true);\r\n                }\r\n            });\r\n\r\n        }\r\n    }, [id]);\r\n\r\n    useEffect(() => {\r\n        setSeed(Math.floor(Math.random() * 5000));        \r\n    }, []);\r\n\r\n   \r\n    const createChat = () => {\r\n        debugger\r\n        const roomName = prompt(\"Please Enter Name for Chat\");\r\n        const email = prompt('Enter the Participant email-id')\r\n        if(roomName && email){\r\n            db.collection(\"rooms\").add({\r\n                name: roomName,\r\n                email : [email, user.email]\r\n            })\r\n        }\r\n    };\r\n\r\n    return !addNewChat ? (\r\n        \r\n        <Link to={`/rooms/${id}`} key={id}>\r\n            <div className=\"sidebarChat\">\r\n                <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`}/>\r\n                <div className=\"sidebarChat_info\">\r\n                    <h2>{name}</h2>\r\n                    <p>Last message : {messages[0]?.message}</p>\r\n                    <p>{lengthOfTheGroup+ \" People are here\"}</p>\r\n\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    ) : (\r\n        <div onClick={createChat} className=\"sidebarChat\">\r\n             \r\n            <h3 className=\"add-new-chat-title\">Add New Chat</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarChat\r\n","import React, {useState,useEffect} from 'react';\r\nimport './Sidebar.css';\r\nimport {Avatar, IconButton} from \"@material-ui/core\";\r\nimport DonutLargeIcon from \"@material-ui/icons/DonutLarge\";\r\nimport ChatIcon from \"@material-ui/icons/Chat\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport {SearchOutlined} from \"@material-ui/icons\";\r\nimport SidebarChat from \"./SidebarChat\";\r\nimport db from './firebase';\r\nimport { useStateValue } from './StateProvider';\r\nimport { Popover, Button } from 'antd';\r\nimport LogoutIcon from '@mui/icons-material/Logout';\r\nimport { useHistory } from  'react-router-dom';\r\nimport {auth,provider} from './firebase';\r\n\r\n\r\nfunction Sidebar(props) {\r\n    const history = useHistory();\r\n    const [rooms, setRooms] = useState([]);\r\n    const [{user},dispatch] = useStateValue();\r\n    const [searchFilter , setSearchFilter] = useState(\"\");\r\n    // window.rooms =[];\r\n        const logout = () => {\r\n            auth.signOut();\r\n            localStorage.removeItem(\"userDetails\");\r\n\r\n            window.location.href = window.location.href.slice(0, window.location.href.indexOf(\"rooms\"));\r\n        };\r\n\r\n        useEffect(() => {\r\n            if(searchFilter.length){\r\n                setRooms(window.rooms.\r\n                    filter(e=> e && e.data.name.toLowerCase().includes(searchFilter.toLowerCase())\r\n                    ))\r\n            }else{\r\n                window.rooms && setRooms(window.rooms)\r\n            }\r\n        }, [searchFilter])\r\n\r\n\r\n    useEffect(() => {\r\n        window.rooms = [];\r\n        const unsubscribe = db.collection('rooms').onSnapshot(snapshot => (\r\n            setRooms(snapshot.docs.map(doc => {\r\n                window.rooms.push(doc.data().email.includes(user.email) ? {\r\n                    id: doc.id,\r\n                    data: doc.data()\r\n                } : undefined);\r\n               return doc.data().email.includes(user.email) ? {\r\n                    id: doc.id,\r\n                    data: doc.data()\r\n                } : undefined\r\n            }\r\n\r\n            ))\r\n        ));\r\n// debugger\r\n        return () => {\r\n            unsubscribe();\r\n        }\r\n    },[]); \r\n\r\n    const content = (\r\n        <div style={{\"display\": \"flex\", justifyContent:\"center\", cursor: \"pointer\"}} onClick={()=>{logout()}}>\r\n          <LogoutIcon/>\r\n          Logout\r\n        </div>\r\n      );\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebar_header\">\r\n                <Avatar src={user?.photoURL}/>\r\n                <div className=\"sidebar_headerRight\">\r\n                    <IconButton>\r\n                        <DonutLargeIcon/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <ChatIcon/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                    <Popover  content={content} title=\"Options\" trigger=\"click\">\r\n                        <MoreVertIcon/>\r\n                        </Popover>\r\n                    </IconButton>\r\n                    \r\n                </div>\r\n            </div>\r\n            <div className=\"sidebar_search\">\r\n                <div className=\"sidebar_searchContainer\">\r\n                    <SearchOutlined />\r\n                    <input onChange={(e)=>{setSearchFilter(e.target.value)}} type=\"text\" placeholder=\"Search or start new chat\"/>\r\n                </div>\r\n            </div>\r\n            <div className=\"sidebar_chats\">\r\n                <SidebarChat addNewChat/>\r\n                {rooms.map(room=> ( \r\n                   room ? <SidebarChat key={room.id} id={room.id} name={room.data.name} email={room.data.email}/> :null\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Sidebar;","import React, {useState,useEffect} from 'react';\r\nimport {Avatar, IconButton} from '@material-ui/core';\r\nimport {AttachFile, MoreVert, SearchOutlined} from '@material-ui/icons';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport './Chat.css';\r\nimport { useParams } from 'react-router-dom';\r\nimport db from './firebase';\r\nimport firebase from 'firebase';\r\nimport {useStateValue} from \"./StateProvider\";\r\nimport moment from 'moment';\r\n\r\nfunction Chat() {\r\n    const [input, setInput] = useState(\"\");\r\n    const [seed, setSeed] = useState(\"\");\r\n    const {roomId} = useParams();\r\n    const [roomName, setRoomName] = useState(\"\");\r\n    const [messages, setMessages] = useState([]);\r\n    const [{user}, dispatch] = useStateValue();\r\n\r\n    useEffect(()=>{\r\n        if(roomId){\r\n            db.collection('rooms').doc(roomId).onSnapshot(snapshot => {\r\n                setRoomName(snapshot.data().name);\r\n            });\r\n\r\n            db.collection('rooms').doc(roomId).collection(\"messages\").orderBy(\"timestamp\",\"asc\").onSnapshot(snapshot => {\r\n                setMessages(snapshot.docs.map(doc => doc.data()))\r\n            });\r\n\r\n        }\r\n    },[roomId])\r\n\r\n    useEffect(() => {\r\n        setSeed(Math.floor(Math.random() * 5000));        \r\n    }, [roomId]);\r\n\r\n    const sendMessage = (e) => {\r\n        e.preventDefault();\r\n        db.collection('rooms').doc(roomId).collection('messages').add({\r\n            message: input,\r\n            name: user.displayName,\r\n            timestamp : new Date().toUTCString(),\r\n            timestamp1: new Date().toUTCString(),\r\n        })\r\n\r\n        setInput(\"\");\r\n    }\r\n\r\n    return (\r\n        <div className='chat'>\r\n            <div className='chat_header'>\r\n                <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`}/>\r\n                <div className='chat_headerInfo'>\r\n                    <h3 className='chat-room-name'>{roomName}</h3>\r\n                    <p className='chat-room-last-seen'>\r\n                        Last seen {\" \"}\r\n                        {moment(new Date(\r\n                            messages[messages.length - 1]?.\r\n                            timestamp1\r\n                        )).fromNow()\r\n                        }\r\n                    </p>\r\n                </div>\r\n                <div className=\"chat_headerRight\">\r\n                    <IconButton>\r\n                        <SearchOutlined/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <AttachFile/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVert/>\r\n                    </IconButton>\r\n                    \r\n                </div>\r\n            </div>\r\n            <div className='chat_body'>\r\n                {messages.map(message => (\r\n                    <p key={message.id} className={`chat_message ${ message.name == user.displayName && 'chat_receiver'}`}>\r\n                        <span className=\"chat_name\">{message.name}</span>\r\n                        {message.message}\r\n                        <span className=\"chat_timestemp\">{!moment(new Date(\r\n                            messages.\r\n                            timestamp1\r\n                        )).fromNow().includes(\"seconds\") || !moment(new Date(\r\n                            message.\r\n                            timestamp1\r\n                        )).fromNow().includes(\"minutes\") || !moment(new Date(\r\n                            message?.\r\n                            timestamp1\r\n                        )).fromNow().includes(\"hours\") ? moment(new Date(\r\n                            message.\r\n                            timestamp1\r\n                        )).fromNow(): moment(new Date(message.timestamp1)).format('hh:mm A') } { !moment(new Date(\r\n                            message.\r\n                            timestamp1\r\n                        )).fromNow().includes(\"seconds\") || !moment(new Date(\r\n                            message.\r\n                            timestamp1\r\n                        )).fromNow().includes(\"minutes\") || !moment(new Date(\r\n                            message.\r\n                            timestamp1\r\n                        )).fromNow().includes(\"hours\") ? \"\": new Date(message.timestamp1).toDateString()}</span>\r\n                    </p>\r\n                ))}\r\n            </div>\r\n            <div className='chat_footer'>\r\n                <InsertEmoticonIcon />\r\n                <form>\r\n                    <input value={input} onChange={(e) => setInput(e.target.value)} type=\"text\" placeholder=\"Type a message\"/>\r\n                    <button type=\"submit\" onClick={sendMessage}> Send a Message</button>\r\n                </form>\r\n                <MicIcon/>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n","export const initialState = {\r\n    user:null,\r\n};\r\n\r\nexport const actionTypes = {\r\n    SET_USER : \"SET_USER\",\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type){\r\n        case actionTypes.SET_USER:\r\n            return {\r\n                ...state,\r\n                user: action.user,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import { Button } from '@material-ui/core';\r\nimport React from 'react';\r\nimport './Login.css';\r\nimport {auth,provider} from './firebase';\r\nimport { actionTypes } from './reducer';\r\nimport { useStateValue } from './StateProvider';\r\nimport {useHistory} from 'react-router-dom'\r\nfunction Login() {\r\n    const history = useHistory();\r\n    const [{},dispatch] = useStateValue();\r\n    const signIn = () => {\r\n        auth\r\n        \r\n            .signInWithPopup(provider)\r\n            .then((result) => {\r\n                dispatch({\r\n                    type: actionTypes.SET_USER,\r\n                    user: result.user,\r\n                });\r\n                localStorage.setItem(\"userDetails\", JSON.stringify(result.user));\r\n            })\r\n            .catch((error) => alert(error.message));\r\n    }\r\n    return (\r\n        <div className=\"login\">\r\n           <div className=\"login_container\">\r\n               <img src=\"https://upload.wikimedia.org/wikipedia/commons/6/6b/WhatsApp.svg\" alt=\"\"/> \r\n                <div className=\"login_text\">\r\n                    <h1>Sign in to Whatsapp</h1>\r\n                </div>\r\n                <Button type=\"submit\" onClick={signIn}>Sign in With Google</Button>\r\n           </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login\r\n","import './App.css';\nimport React, {useEffect, useState} from 'react';\nimport Sidebar from './Sidebar';\nimport Chat from './Chat';\nimport Login from './Login';\nimport { BrowserRouter as Router,Switch, Route} from 'react-router-dom';\nimport {useStateValue} from './StateProvider';\nimport { actionTypes } from './reducer';\nfunction App() {\n  const [{user}, dispatch] = useStateValue();\n\n  useEffect(() => {\n    if(localStorage.getItem(\"userDetails\")){\n        dispatch({\n            type: actionTypes.SET_USER,\n            user: JSON.parse(localStorage.getItem(\"userDetails\")),\n        });\n    }\n},[]);\n\n  return (\n    <div className='app'>\n      {!user ? (\n          <Login />\n      ) : (\n        <div className='app_body'>\n          <Router>\n            <Sidebar />\n            <Switch>\n              <Route path='/rooms/:roomId'>\n                <Chat />\n              </Route>\n              <Route path='/'>\n                <Chat />\n              </Route>\n            </Switch>\n          </Router>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport reducer,{initialState} from './reducer';\nimport {StateProvider} from './StateProvider';\nimport 'antd/dist/antd.css'\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n    <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}